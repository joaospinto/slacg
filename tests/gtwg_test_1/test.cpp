#include "tests/gtwg_test_1/gtwg_codegen.hpp"

#include <array>
#include <gtest/gtest.h>

namespace slacg::test {

TEST(SLACG, Test) {
  constexpr auto G_data = std::array{
    10., 20., 30., 40.,  1., 11., 21., 31., 41.,  2., 12., 22., 32.,
    42.,  3., 13., 23., 33., 43.,  4., 14., 24., 34., 44.,  5., 15.,
    25., 35., 45.,  6., 16., 26., 36., 46.,  7., 17., 27., 37., 47.,
    8., 18., 28., 38., 48.,  9., 19., 29., 39., 49.};

  constexpr auto w = std::array{0., 1., 2., 3., 4.};

  constexpr auto sol = std::array{
    10000., 10300., 10610., 10600., 10920., 11240., 10900., 11230., 11560.,
    11890., 11200., 11540., 11880., 12220., 12560., 11500., 11850., 12200.,
    12550., 12900., 13250., 11800., 12160., 12520., 12880., 13240., 13600.,
    13960., 12100., 12470., 12840., 13210., 13580., 13950., 14320., 14690.,
    12400., 12780., 13160., 13540., 13920., 14300., 14680., 15060., 15440.,
    12700., 13090., 13480., 13870., 14260., 14650., 15040., 15430., 15820.,
    16210.
  };

  constexpr double r = 0.;

  std::array<double, 55> gtwg;

  gt_w_g(G_data.data(), w.data(), r, gtwg.data());

  for (std::size_t i = 0; i < gtwg.size(); ++i) {
    EXPECT_NEAR(gtwg[i], sol[i], 1e-12);
  }
}

}  // namespace slacg::test
